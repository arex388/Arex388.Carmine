<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Arex388.Carmine</name>
    </assembly>
    <members>
        <member name="T:Arex388.Carmine.CarmineClient">
            <summary>
            Carmine.io API client.
            </summary>
        </member>
        <member name="M:Arex388.Carmine.CarmineClient.#ctor(System.String,System.Net.Http.HttpClient)">
            <summary>
            Create an instance of the Carmine.io API client.
            </summary>
            <param name="apiKey">Your Carmine.io API key.</param>
            <param name="httpClient">An instance of HttpClient.</param>
        </member>
        <member name="M:Arex388.Carmine.CarmineClient.GetTripAsync(Arex388.Carmine.TripId,System.Threading.CancellationToken)">
            <summary>
            Returns a trip.
            </summary>
            <param name="id">The trip's id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>GetTrip.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.CarmineClient.GetTripAsync(Arex388.Carmine.GetTrip.Request,System.Threading.CancellationToken)">
            <summary>
            Returns a trip.
            </summary>
            <param name="request">The trip's id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>GetTrip.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.CarmineClient.GetUserAsync(Arex388.Carmine.UserId,System.Threading.CancellationToken)">
            <summary>
            Returns a user.
            </summary>
            <param name="id">The user's id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>GetUser.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.CarmineClient.GetUserAsync(Arex388.Carmine.GetUser.Request,System.Threading.CancellationToken)">
            <summary>
            Returns a user.
            </summary>
            <param name="request">An instance of <c>GetUser.Request</c> containing the request's parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>GetUser.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.CarmineClient.GetVehicleAsync(Arex388.Carmine.VehicleId,System.Threading.CancellationToken)">
            <summary>
            Returns a vehicle.
            </summary>
            <param name="id">The vehicle's id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>GetVehicle.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.CarmineClient.GetVehicleAsync(Arex388.Carmine.GetVehicle.Request,System.Threading.CancellationToken)">
            <summary>
            Returns a vehicle.
            </summary>
            <param name="request">An instance of <c>GetVehicle.Request</c> containing the request's parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>GetVehicle.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.CarmineClient.ListTripsAsync(System.Threading.CancellationToken)">
            <summary>
            Returns a list of trips.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>ListTrips.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.CarmineClient.ListTripsAsync(Arex388.Carmine.ListTrips.Request,System.Threading.CancellationToken)">
            <summary>
            Returns a list of trips.
            </summary>
            <param name="request">An instance of <c>ListTrips.Request</c> containing the request's parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>ListTrips.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.CarmineClient.ListUsersAsync(System.Threading.CancellationToken)">
            <summary>
            Returns a list of users.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>ListUsers.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.CarmineClient.ListUsersAsync(Arex388.Carmine.ListUsers.Request,System.Threading.CancellationToken)">
            <summary>
            Returns a list of users.
            </summary>
            <param name="request">An instance of <c>ListUsers.Request</c> containing the request's parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>ListUsers.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.CarmineClient.ListVehiclesAsync(System.Threading.CancellationToken)">
            <summary>
            Returns a list of vehicles.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>ListVehicles.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.CarmineClient.ListVehiclesAsync(Arex388.Carmine.ListVehicles.Request,System.Threading.CancellationToken)">
            <summary>
            Returns a list of vehicles.
            </summary>
            <param name="request">An instance of <c>ListVehicles.Request</c> containing the request's parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>ListVehicles.Response</c>.</returns>
        </member>
        <member name="T:Arex388.Carmine.CarmineClientFactory">
            <summary>
            Carmine.io API client factory for applications integrating with more than one Carmine.io account.
            </summary>
        </member>
        <member name="M:Arex388.Carmine.CarmineClientFactory.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            Create an instance of the Carmine.io client factory.
            </summary>
            <param name="httpClient">An instance of HttpClient.</param>
            <param name="memoryCache">An instance of MemoryCache.</param>
        </member>
        <member name="M:Arex388.Carmine.CarmineClientFactory.CreateClient(System.String)">
            <summary>
            Create and cache an instance of the Carmine.io API client.
            </summary>
            <param name="apiKey">Your Carmine.io API key. The value will be used as the cache identifier.</param>
            <returns>A new or cached instance of CarmineClient.</returns>
        </member>
        <member name="T:Arex388.Carmine.EventType">
            <summary>
            The <c>Event</c>'s type.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.EventType.None">
            <summary>
            The default type. If this is the value, then the response value wasn't parsed and this was used as a fallback.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.EventType.AfterHoursDriving">
            <summary>
            The event was for after hours driving.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.EventType.ExcessiveIdling">
            <summary>
            The event was for excessive idling.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.EventType.ExtremeAcceleration">
            <summary>
            The event was for extreme acceleration.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.EventType.ExtremeBreaking">
            <summary>
            The event was for extreme breaking.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.EventType.HarshAcceleration">
            <summary>
            The event was for harsh acceleration.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.EventType.HarshBraking">
            <summary>
            The event was for harsh braking.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.EventType.HarshCornering">
            <summary>
            The event was for harsh cornering.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.EventType.HighRpm">
            <summary>
            The event was for high engine RPM.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.EventType.MaxTripDuration">
            <summary>
            The event was for trip duration time limit reached.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.EventType.Speeding">
            <summary>
            The event was for speeding.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.Language">
            <summary>
            The response language.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.Language.Dutch">
            <summary>
            Dutch.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.Language.English">
            <summary>
            English (default).
            </summary>
        </member>
        <member name="F:Arex388.Carmine.Language.French">
            <summary>
            French.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.Language.German">
            <summary>
            German.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.Language.Spanish">
            <summary>
            Spanish.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.LocationCategory">
            <summary>
            The <c>Location</c>'s category.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.LocationCategory.None">
            <summary>
            The default category. If this is the value, then the response value wasn't parsed and this was used as a fallback.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.LocationCategory.BusinessRelatedInfrastructure">
            <summary>
            The location is business related infrastructure.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.LocationCategory.Customer">
            <summary>
            The location is a customer.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.LocationCategory.CompanyAsset">
            <summary>
            The location is a company asset.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.LocationCategory.CompanyOffice">
            <summary>
            The location is a company office.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.LocationCategory.FuelStation">
            <summary>
            The location is a fuel station.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.LocationCategory.Miscellaneous">
            <summary>
            The location is unknown.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.LocationCategory.Parking">
            <summary>
            The location is a parking lot.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.LocationCategory.PrivateAddress">
            <summary>
            The location is a private address.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.LocationCategory.Restaurant">
            <summary>
            The location is a restaurant.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.LocationCategory.ServiceArea">
            <summary>
            The location is a service area.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.LocationCategory.Warehouse">
            <summary>
            The location is a warehouse.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.LocationCategory.WholesaleOrSupplies">
            <summary>
            The location is a wholesale or general supplier.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.LocationType">
            <summary>
            The <c>Location</c>'s type.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.LocationType.None">
            <summary>
            The default type. If this is the value, then the response value wasn't parsed and this was used as a fallback.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.LocationType.Cache">
            <summary>
            The location was retrieved from cache.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.LocationType.Geofence">
            <summary>
            The location was a geofence.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.LocationType.GoogleCache">
            <summary>
            The location was retrieved from Google cache.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.LocationType.PointOfInterest">
            <summary>
            The location is a point of interest.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.ResponseStatus">
            <summary>
            The response's status.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.ResponseStatus.Cancelled">
            <summary>
            The request was cancelled by the client.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.ResponseStatus.Failed">
            <summary>
            The request failed at the service.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.ResponseStatus.Invalid">
            <summary>
            The request was rejected as invalid by the client.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.ResponseStatus.Succeeded">
            <summary>
            The request succeeded.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.ResponseStatus.TimedOut">
            <summary>
            The request timed out.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.UserRole">
            <summary>
            The <c>User</c>'s role.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.UserRole.None">
            <summary>
            The default role. If this is the value, then the response value wasn't parsed and this was used as a fallback.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.UserRole.Administrator">
            <summary>
            The user is an administrator.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.UserRole.Driver">
            <summary>
            The user is a driver.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.UserStatus">
            <summary>
            The <c>User</c>'s status.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.UserStatus.Active">
            <summary>
            The user is active.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.UserStatus.Inactive">
            <summary>
            The user is inactive.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.VehicleStatus">
            <summary>
            The <c>Vehicle</c>'s status.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.VehicleStatus.None">
            <summary>
            The default status. If this is the value, then the response value wasn't parsed and this was used as a fallback.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.VehicleStatus.Active">
            <summary>
            The vehicle is active.
            </summary>
        </member>
        <member name="F:Arex388.Carmine.VehicleStatus.Inactive">
            <summary>
            The vehicle is inactive.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.CarmineClientExtensions">
            <summary>
            <c>ICarmineClient</c> extensions.
            </summary>
        </member>
        <member name="M:Arex388.Carmine.CarmineClientExtensions.GetActiveVehicleAsync(Arex388.Carmine.ICarmineClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns an active vehicle with the specified VIN.
            </summary>
            <param name="carmine">An instance of <c>CarmineClient</c>.</param>
            <param name="vin">The vehicle's VIN.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>Vehicle</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.CarmineClientExtensions.ListActiveVehiclesAsync(Arex388.Carmine.ICarmineClient,System.Threading.CancellationToken)">
            <summary>
            Returns a list of all active vehicles.
            </summary>
            <param name="carmine">An instance of <c>CarmineClient</c>.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A list of <c>Vehicle</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.CarmineClientExtensions.ListRecentlyActiveVehiclesAsync(Arex388.Carmine.ICarmineClient,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Returns a list of recently active vehicles.
            </summary>
            <param name="carmine">An instance of <c>CarmineClient</c>.</param>
            <param name="minutes">A negative number indicating how far back to check the <c>LastActivityAtUtc</c>.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A list of <c>Vehicle</c>.</returns>
        </member>
        <member name="T:Arex388.Carmine.ICarmineClient">
            <summary>
            Carmine.io API client.
            </summary>
        </member>
        <member name="M:Arex388.Carmine.ICarmineClient.GetTripAsync(Arex388.Carmine.TripId,System.Threading.CancellationToken)">
            <summary>
            Returns a trip.
            </summary>
            <param name="id">The trip's id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>GetTrip.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.ICarmineClient.GetTripAsync(Arex388.Carmine.GetTrip.Request,System.Threading.CancellationToken)">
            <summary>
            Returns a trip.
            </summary>
            <param name="request">The trip's id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>GetTrip.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.ICarmineClient.GetUserAsync(Arex388.Carmine.UserId,System.Threading.CancellationToken)">
            <summary>
            Returns a user.
            </summary>
            <param name="id">The user's id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>GetUser.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.ICarmineClient.GetUserAsync(Arex388.Carmine.GetUser.Request,System.Threading.CancellationToken)">
            <summary>
            Returns a user.
            </summary>
            <param name="request">An instance of <c>GetUser.Request</c> containing the request's parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>GetUser.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.ICarmineClient.GetVehicleAsync(Arex388.Carmine.VehicleId,System.Threading.CancellationToken)">
            <summary>
            Returns a vehicle.
            </summary>
            <param name="id">The vehicle's id.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>GetVehicle.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.ICarmineClient.GetVehicleAsync(Arex388.Carmine.GetVehicle.Request,System.Threading.CancellationToken)">
            <summary>
            Returns a vehicle.
            </summary>
            <param name="request">An instance of <c>GetVehicle.Request</c> containing the request's parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>GetVehicle.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.ICarmineClient.ListTripsAsync(System.Threading.CancellationToken)">
            <summary>
            Returns a list of trips.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>ListTrips.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.ICarmineClient.ListTripsAsync(Arex388.Carmine.ListTrips.Request,System.Threading.CancellationToken)">
            <summary>
            Returns a list of trips.
            </summary>
            <param name="request">An instance of <c>ListTrips.Request</c> containing the request's parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>ListTrips.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.ICarmineClient.ListUsersAsync(System.Threading.CancellationToken)">
            <summary>
            Returns a list of users.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>ListUsers.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.ICarmineClient.ListUsersAsync(Arex388.Carmine.ListUsers.Request,System.Threading.CancellationToken)">
            <summary>
            Returns a list of users.
            </summary>
            <param name="request">An instance of <c>ListUsers.Request</c> containing the request's parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>ListUsers.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.ICarmineClient.ListVehiclesAsync(System.Threading.CancellationToken)">
            <summary>
            Returns a list of vehicles.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>ListVehicles.Response</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.ICarmineClient.ListVehiclesAsync(Arex388.Carmine.ListVehicles.Request,System.Threading.CancellationToken)">
            <summary>
            Returns a list of vehicles.
            </summary>
            <param name="request">An instance of <c>ListVehicles.Request</c> containing the request's parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of <c>ListVehicles.Response</c>.</returns>
        </member>
        <member name="T:Arex388.Carmine.ICarmineClientFactory">
            <summary>
            Carmine.io API client factory for applications integrating with more than one Carmine.io account.
            </summary>
        </member>
        <member name="M:Arex388.Carmine.ICarmineClientFactory.CreateClient(System.String)">
            <summary>
            Create and cache an instance of the Carmine.io API client.
            </summary>
            <param name="apiKey">Your Carmine.io API key. The value will be used as the cache identifier.</param>
            <returns>A new or cached instance of CarmineClient.</returns>
        </member>
        <member name="T:Arex388.Carmine.Event">
            <summary>
            Event object.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Event.Data">
            <summary>
            Additional data about the event.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Event.EndAtUtc">
            <summary>
            The event's end timestamp in UTC.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Event.Type">
            <summary>
            The event's type.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Event.Id">
            <summary>
            The event's id.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Event.StartAtUtc">
            <summary>
            The event's start timestamp in UTC.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Event.TripId">
            <summary>
            The event's trip id.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.Location">
            <summary>
            Location object.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Location.Address">
            <summary>
            The location's address.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Location.Category">
            <summary>
            The location's category.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Location.CreatedAtUtc">
            <summary>
            The location's created timestamp in UTC.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Location.CreatedById">
            <summary>
            The location's creator id.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Location.DriverId">
            <summary>
            The location's driver id.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Location.Geometry">
            <summary>
            The location's bounds.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Location.Id">
            <summary>
            The location's id.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Location.LastActivityAtUtc">
            <summary>
            The location's last activity timestamp in UTC.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Location.Latitude">
            <summary>
            The location's center's latitude.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Location.Longitude">
            <summary>
            The location's center's longitude.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Location.Name">
            <summary>
            The location's name.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Location.Notes">
            <summary>
            Notes about the location.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Location.VisitedCount">
            <summary>
            The location's visit count.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Location.Type">
            <summary>
            The location's type.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.Trip">
            <summary>
            Trip object.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Trip.DistanceTraveledInKilometers">
            <summary>
            The trip's distance traveled in kilometeres, rounded to two decimal places.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Trip.DistanceTraveledInMeters">
            <summary>
            The trip's distance traveled in meters.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Trip.DistanceTraveledInMiles">
            <summary>
            The trip's distance traveled in miles, rounded to two decimal places.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Trip.EndAtUtc">
            <summary>
            The trip's end timestamp in UTC.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Trip.Id">
            <summary>
            The trip's id.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Trip.IsAfterHours">
            <summary>
            Flag indicating if the trip was after hours (outside of work hours, but not explicitly for personal use).
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Trip.IsHidden">
            <summary>
            Flag indicating if the trip is hidden.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Trip.IsPersonal">
            <summary>
            Flag indicating if the trip was for personal use (outside of work hours).
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Trip.IsStationary">
            <summary>
            Flag indicating if the vehicle actually moved during the trip.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Trip.MaxSpeedInKilometersPerHour">
            <summary>
            The trip's maximum speed in kilometers per hour, rounded to two decimal places.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Trip.MaxSpeedInMetersPerSecond">
            <summary>
            The trip's maximum speed in meters per second.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Trip.MaxSpeedInMilesPerHour">
            <summary>
            The trip's maximum speed in miles per hour, rounded to two decimal places.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Trip.ParkedSeconds">
            <summary>
            The amount of time, in seconds, the vehicle was parked before the trip's start.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Trip.StartAtUtc">
            <summary>
            The trip's start timestamp in UTC.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.TripExpanded">
            <summary>
            Trip object (expanded).
            </summary>
        </member>
        <member name="P:Arex388.Carmine.TripExpanded.Driver">
            <summary>
            The trip's driver.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.TripExpanded.EndLocation">
            <summary>
            The trip's end location.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.TripExpanded.Events">
            <summary>
            The trip's events.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.TripExpanded.Vehicle">
            <summary>
            The trip's vehicle.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.TripExpanded.StartLocation">
            <summary>
            The trip's start location.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.TripExpanded.Waypoints">
            <summary>
            The trip's waypoints.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.User">
            <summary>
            User object.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.User.CanShareVehiclesEta">
            <summary>
            Flag indicating if the user can share their vehicle's ETA.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.User.Color">
            <summary>
            The user's color.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.User.CreatedAtUtc">
            <summary>
            The user's created timestamp in UTC.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.User.Email">
            <summary>
            The user's email.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.User.Id">
            <summary>
            The user's id.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.User.IsEmailValidated">
            <summary>
            Flag indicating if the user's email has been validated.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.User.LastActivityAtUtc">
            <summary>
            The user's last activity timestamp in UTC.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.User.LastTripId">
            <summary>
            The user's last trip id.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.User.Name">
            <summary>
            The user's name.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.User.Phone">
            <summary>
            The user's phone.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.User.PhotoUrl">
            <summary>
            The user's photo URL.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.User.Role">
            <summary>
            The user's role.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.User.Status">
            <summary>
            The user's status.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.User.VehicleId">
            <summary>
            The user's current vehicle id.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.Vehicle">
            <summary>
            Vehicle object.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.CarbonEmissionsInTonsPerGallon">
            <summary>
            The vehicle's CO2 emissions in tons per gallon of fuel.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.CarbonEmissionsInTonsPerLiter">
            <summary>
            The vehicle's CO2 emissions in tons per liter of fuel.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.Color">
            <summary>
            The vehicle's color.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.CreatedAtUtc">
            <summary>
            The vehicle's created timestamp in UTC.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.DriverId">
            <summary>
            The vehicle's current driver id.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.Faults">
            <summary>
            Diagnostic fault codes.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.FuelConsumptionInKilometersPerLiter">
            <summary>
            The vehicle's fuel consumption in kilometers per liter, rounded to two decimal places.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.FuelConsumptionInMetersPerLiter">
            <summary>
            The vehicle's fuel consumption in meters per liter.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.FuelConsumptionInMilesPerGallon">
            <summary>
            The vehicle's fuel consumption in miles per galon, rounded to two decimal places.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.FuelRemaining">
            <summary>
            The vehicle's current remaining fuel.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.Id">
            <summary>
            The vehicle's id.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.LastActivityAtUtc">
            <summary>
            The vehicle's last activity timestamp in UTC.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.LastTripId">
            <summary>
            The vehicle's last trip id.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.Latitude">
            <summary>
            The vehicle's current latitude.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.LicensePlateNumber">
            <summary>
            The vehicle's license plate number.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.Longitude">
            <summary>
            The vehicle's current longitude.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.Make">
            <summary>
            The vehicle's make.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.Model">
            <summary>
            The vehicle's model.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.Notes">
            <summary>
            Notes for the vehicle.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.OdometerInKilometers">
            <summary>
            The vehicle's odometer in kilometers.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.OdometerInMeters">
            <summary>
            The vehicle's odometer in meters.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.OdometerInMiles">
            <summary>
            The vehicle's odometer in miles.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.Status">
            <summary>
            The vehicle's status.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.Vin">
            <summary>
            The vehicle's VIN.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Vehicle.Year">
            <summary>
            The vehicle's year.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.Waypoint">
            <summary>
            Waypoint object.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Waypoint.AtUtc">
            <summary>
            The waypoint's timestamp in UTC.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Waypoint.DistanceTraveledInKilometers">
            <summary>
            The trip's distance traveled at this waypoint in kilometers.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Waypoint.DistanceTraveledInMeters">
            <summary>
            The trip's distance traveled at this waypoint in meters.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Waypoint.DistanceTraveledInMiles">
            <summary>
            The trip's distance traveled at this waypoint in miles.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Waypoint.ElevationInKilometers">
            <summary>
            The vehicle's elevation above sea level in kilometers.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Waypoint.ElevationInMeters">
            <summary>
            The vehicle's elevation above sea level in meters.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Waypoint.ElevationInMiles">
            <summary>
            The vehicle's elevation above sea level in miles.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Waypoint.EngineRpm">
            <summary>
            The vehicle's engine's RPM at this waypoint.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Waypoint.Id">
            <summary>
            The waypoint's id.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Waypoint.Latitude">
            <summary>
            The waypoint's latitude.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Waypoint.Longitude">
            <summary>
            The waypoint's longitude.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Waypoint.SpeedInKilometersPerHour">
            <summary>
            The vehicle's speed at this waypoint in kilometers per hour, rounded to two decimal places.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Waypoint.SpeedInMetersPerSecond">
            <summary>
            The vehicle's speed at this waypoint in meters per second.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Waypoint.SpeedInMilesPerHour">
            <summary>
            The vehicle's speed at this waypoint in miles per hour, rounded to two decimal places.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.Waypoint.TripId">
            <summary>
            The waypoint's trip id.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.GetTrip">
            <summary>
            GetTrip request and response containers.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.GetTrip.Request">
            <summary>
            GetTrip request container.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.GetTrip.Request.Id">
            <summary>
            The trip's id.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.GetTrip.Request.Language">
            <summary>
            The language the results should be returned in. <c>English</c> by default.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.GetTrip.Response">
            <summary>
            GetTrip response container.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.GetTrip.Response.Status">
            <summary>
            The response's status.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.GetTrip.Response.Trip">
            <summary>
            The matched user.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.GetUser">
            <summary>
            GetUser request and response containers.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.GetUser.Request">
            <summary>
            GetUser request container.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.GetUser.Request.Id">
            <summary>
            The user's id.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.GetUser.Request.Language">
            <summary>
            The language the results should be returned in. <c>English</c> by default.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.GetUser.Response">
            <summary>
            GetUser response container.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.GetUser.Response.Status">
            <summary>
            The response's status.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.GetUser.Response.User">
            <summary>
            The matched user.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.GetVehicle">
            <summary>
            GetVehicle request and response containers.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.GetVehicle.Request">
            <summary>
            GetVehicle request container.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.GetVehicle.Request.Id">
            <summary>
            The vehicle's id.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.GetVehicle.Request.Language">
            <summary>
            The language the results should be returned in. <c>English</c> by default.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.GetVehicle.Response">
            <summary>
            GetVehicle response container.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.GetVehicle.Response.Status">
            <summary>
            The response's status.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.GetVehicle.Response.Vehicle">
            <summary>
            The matched vehicle.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.ListTrips">
            <summary>
            ListTrips request and response containers.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.ListTrips.Request">
            <summary>
            ListTrips request container.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.ListTrips.Request.DriverId">
            <summary>
            The trip's driver id.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.ListTrips.Request.EndAtUtc">
            <summary>
            The trip's end timestamp in UTC.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.ListTrips.Request.Language">
            <summary>
            The language the results should be returned in. <c>English</c> by default.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.ListTrips.Request.StartAtUtc">
            <summary>
            The trip's start timestamp in UTC.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.ListTrips.Request.Take">
            <summary>
            The number of results to return. <c>100</c> by default.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.ListTrips.Request.VehicleId">
            <summary>
            The trip's vehicle id.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.ListTrips.Response">
            <summary>
            ListTrips response container.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.ListTrips.Response.Status">
            <summary>
            The response's status.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.ListTrips.Response.Trips">
            <summary>
            The matched trips.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.ListUsers">
            <summary>
            ListUsers request and response containers.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.ListUsers.Request">
            <summary>
            ListUsers request container.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.ListUsers.Request.Language">
            <summary>
            The language the results should be returned in. <c>English</c> by default.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.ListUsers.Request.Search">
            <summary>
            Filter by the user's name or email. Supports SQL's LIKE syntax.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.ListUsers.Request.Status">
            <summary>
            Filter by the user's status.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.ListUsers.Response">
            <summary>
            ListUsers response container.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.ListUsers.Response.Status">
            <summary>
            The response's status.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.ListUsers.Response.Users">
            <summary>
            The matched users.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.ListVehicles">
            <summary>
            ListVehicles request and response containers.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.ListVehicles.Request">
            <summary>
            ListVehicles request container.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.ListVehicles.Request.Language">
            <summary>
            The language the results should be returned in. <c>English</c> by default.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.ListVehicles.Request.Search">
            <summary>
            Filter by the vehicle's VIN, license plate number, year, make, or model.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.ListVehicles.Request.Status">
            <summary>
            Filter by the vehicle's status. <c>All</c> by default.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.ListVehicles.Response">
            <summary>
            ListVehicles response container.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.ListVehicles.Response.Status">
            <summary>
            The response's status.
            </summary>
        </member>
        <member name="P:Arex388.Carmine.ListVehicles.Response.Vehicles">
            <summary>
            The matched vehicles.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.EventId">
            <summary>
            Event id struct.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.LocationId">
            <summary>
            Location id struct.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.TripId">
            <summary>
            Trip id struct.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.UserId">
            <summary>
            User id struct.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.VehicleId">
            <summary>
            Vehicle id struct.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.WaypointId">
            <summary>
            Waypoint id struct.
            </summary>
        </member>
        <member name="T:Arex388.Carmine.LanguageExtensions">
            <summary>
            Extension methods for <see cref="T:Arex388.Carmine.Language" />
            </summary>
        </member>
        <member name="F:Arex388.Carmine.LanguageExtensions.Length">
            <summary>
            The number of members in the enum.
            This is a non-distinct count of defined names.
            </summary>
        </member>
        <member name="M:Arex388.Carmine.LanguageExtensions.ToStringFast(Arex388.Carmine.Language)">
            <summary>
            Returns the string representation of the <see cref="T:Arex388.Carmine.Language"/> value.
            If the attribute is decorated with a <c>[Display]</c> attribute, then
            uses the provided value. Otherwise uses the name of the member, equivalent to
            calling <c>ToString()</c> on <paramref name="value"/>.
            </summary>
            <param name="value">The value to retrieve the string value for</param>
            <returns>The string representation of the value</returns>
        </member>
        <member name="M:Arex388.Carmine.LanguageExtensions.IsDefined(Arex388.Carmine.Language)">
            <summary>
            Returns a boolean telling whether the given enum value exists in the enumeration.
            </summary>
            <param name="value">The value to check if it's defined</param>
            <returns><c>true</c> if the value exists in the enumeration, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Arex388.Carmine.LanguageExtensions.IsDefined(System.String)">
            <summary>
            Returns a boolean telling whether an enum with the given name exists in the enumeration.
            </summary>
            <param name="name">The name to check if it's defined</param>
            <returns><c>true</c> if a member with the name exists in the enumeration, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Arex388.Carmine.LanguageExtensions.IsDefined(System.String,System.Boolean)">
            <summary>
            Returns a boolean telling whether an enum with the given name exists in the enumeration,
            or if a member decorated with a <c>[Display]</c> attribute
            with the required name exists.
            </summary>
            <param name="name">The name to check if it's defined</param>
            <param name="allowMatchingMetadataAttribute">If <c>true</c>, considers the value of metadata attributes,otherwise ignores them</param>
            <returns><c>true</c> if a member with the name exists in the enumeration, or a member is decorated
            with a <c>[Display]</c> attribute with the name, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Arex388.Carmine.LanguageExtensions.TryParse(System.String,Arex388.Carmine.Language@)">
            <summary>
            Converts the string representation of the name or numeric value of
            an <see cref="T:Arex388.Carmine.Language" /> to the equivalent instance.
            The return value indicates whether the conversion succeeded.
            </summary>
            <param name="name">The case-sensitive string representation of the enumeration name or underlying value to convert</param>
            <param name="value">When this method returns, contains an object of type 
            <see cref="T:Arex388.Carmine.Language" /> whose
            value is represented by <paramref name="value"/> if the parse operation succeeds.
            If the parse operation fails, contains the default value of the underlying type
            of <see cref="T:Arex388.Carmine.Language" />. This parameter is passed uninitialized.</param>
            <returns><c>true</c> if the value parameter was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.LanguageExtensions.TryParse(System.String,Arex388.Carmine.Language@,System.Boolean)">
            <summary>
            Converts the string representation of the name or numeric value of
            an <see cref="T:Arex388.Carmine.Language" /> to the equivalent instance.
            The return value indicates whether the conversion succeeded.
            </summary>
            <param name="name">The string representation of the enumeration name or underlying value to convert</param>
            <param name="value">When this method returns, contains an object of type 
            <see cref="T:Arex388.Carmine.Language" /> whose
            value is represented by <paramref name="value"/> if the parse operation succeeds.
            If the parse operation fails, contains the default value of the underlying type
            of <see cref="T:Arex388.Carmine.Language" />. This parameter is passed uninitialized.</param>
            <param name="ignoreCase"><c>true</c> to read value in case insensitive mode; <c>false</c> to read value in case sensitive mode.</param>
            <returns><c>true</c> if the value parameter was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.LanguageExtensions.TryParse(System.String,Arex388.Carmine.Language@,System.Boolean,System.Boolean)">
            <summary>
            Converts the string representation of the name or numeric value of
            an <see cref="T:Arex388.Carmine.Language" /> to the equivalent instance.
            The return value indicates whether the conversion succeeded.
            </summary>
            <param name="name">The string representation of the enumeration name or underlying value to convert</param>
            <param name="value">When this method returns, contains an object of type 
            <see cref="T:Arex388.Carmine.Language" /> whose
            value is represented by <paramref name="value"/> if the parse operation succeeds.
            If the parse operation fails, contains the default value of the underlying type
            of <see cref="T:Arex388.Carmine.Language" />. This parameter is passed uninitialized.</param>
            <param name="ignoreCase"><c>true</c> to read value in case insensitive mode; <c>false</c> to read value in case sensitive mode.</param>
            <param name="allowMatchingMetadataAttribute">If <c>true</c>, considers the value included in metadata attributes such as
            <c>[Display]</c> attribute when parsing, otherwise only considers the member names.</param>
            <returns><c>true</c> if the value parameter was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.LanguageExtensions.GetValues">
            <summary>
            Retrieves an array of the values of the members defined in
            <see cref="T:Arex388.Carmine.Language" />.
            Note that this returns a new array with every invocation, so
            should be cached if appropriate.
            </summary>
            <returns>An array of the values defined in <see cref="T:Arex388.Carmine.Language" /></returns>
        </member>
        <member name="M:Arex388.Carmine.LanguageExtensions.GetNames">
            <summary>
            Retrieves an array of the names of the members defined in
            <see cref="T:Arex388.Carmine.Language" />.
            Note that this returns a new array with every invocation, so
            should be cached if appropriate.
            </summary>
            <returns>An array of the names of the members defined in <see cref="T:Arex388.Carmine.Language" /></returns>
        </member>
        <member name="T:Arex388.Carmine.UserStatusExtensions">
            <summary>
            Extension methods for <see cref="T:Arex388.Carmine.UserStatus" />
            </summary>
        </member>
        <member name="F:Arex388.Carmine.UserStatusExtensions.Length">
            <summary>
            The number of members in the enum.
            This is a non-distinct count of defined names.
            </summary>
        </member>
        <member name="M:Arex388.Carmine.UserStatusExtensions.ToStringFast(Arex388.Carmine.UserStatus)">
            <summary>
            Returns the string representation of the <see cref="T:Arex388.Carmine.UserStatus"/> value.
            If the attribute is decorated with a <c>[Display]</c> attribute, then
            uses the provided value. Otherwise uses the name of the member, equivalent to
            calling <c>ToString()</c> on <paramref name="value"/>.
            </summary>
            <param name="value">The value to retrieve the string value for</param>
            <returns>The string representation of the value</returns>
        </member>
        <member name="M:Arex388.Carmine.UserStatusExtensions.IsDefined(Arex388.Carmine.UserStatus)">
            <summary>
            Returns a boolean telling whether the given enum value exists in the enumeration.
            </summary>
            <param name="value">The value to check if it's defined</param>
            <returns><c>true</c> if the value exists in the enumeration, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Arex388.Carmine.UserStatusExtensions.IsDefined(System.String)">
            <summary>
            Returns a boolean telling whether an enum with the given name exists in the enumeration.
            </summary>
            <param name="name">The name to check if it's defined</param>
            <returns><c>true</c> if a member with the name exists in the enumeration, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Arex388.Carmine.UserStatusExtensions.IsDefined(System.String,System.Boolean)">
            <summary>
            Returns a boolean telling whether an enum with the given name exists in the enumeration,
            or if a member decorated with a <c>[Display]</c> attribute
            with the required name exists.
            </summary>
            <param name="name">The name to check if it's defined</param>
            <param name="allowMatchingMetadataAttribute">If <c>true</c>, considers the value of metadata attributes,otherwise ignores them</param>
            <returns><c>true</c> if a member with the name exists in the enumeration, or a member is decorated
            with a <c>[Display]</c> attribute with the name, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Arex388.Carmine.UserStatusExtensions.TryParse(System.String,Arex388.Carmine.UserStatus@)">
            <summary>
            Converts the string representation of the name or numeric value of
            an <see cref="T:Arex388.Carmine.UserStatus" /> to the equivalent instance.
            The return value indicates whether the conversion succeeded.
            </summary>
            <param name="name">The case-sensitive string representation of the enumeration name or underlying value to convert</param>
            <param name="value">When this method returns, contains an object of type 
            <see cref="T:Arex388.Carmine.UserStatus" /> whose
            value is represented by <paramref name="value"/> if the parse operation succeeds.
            If the parse operation fails, contains the default value of the underlying type
            of <see cref="T:Arex388.Carmine.UserStatus" />. This parameter is passed uninitialized.</param>
            <returns><c>true</c> if the value parameter was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.UserStatusExtensions.TryParse(System.String,Arex388.Carmine.UserStatus@,System.Boolean)">
            <summary>
            Converts the string representation of the name or numeric value of
            an <see cref="T:Arex388.Carmine.UserStatus" /> to the equivalent instance.
            The return value indicates whether the conversion succeeded.
            </summary>
            <param name="name">The string representation of the enumeration name or underlying value to convert</param>
            <param name="value">When this method returns, contains an object of type 
            <see cref="T:Arex388.Carmine.UserStatus" /> whose
            value is represented by <paramref name="value"/> if the parse operation succeeds.
            If the parse operation fails, contains the default value of the underlying type
            of <see cref="T:Arex388.Carmine.UserStatus" />. This parameter is passed uninitialized.</param>
            <param name="ignoreCase"><c>true</c> to read value in case insensitive mode; <c>false</c> to read value in case sensitive mode.</param>
            <returns><c>true</c> if the value parameter was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.UserStatusExtensions.TryParse(System.String,Arex388.Carmine.UserStatus@,System.Boolean,System.Boolean)">
            <summary>
            Converts the string representation of the name or numeric value of
            an <see cref="T:Arex388.Carmine.UserStatus" /> to the equivalent instance.
            The return value indicates whether the conversion succeeded.
            </summary>
            <param name="name">The string representation of the enumeration name or underlying value to convert</param>
            <param name="value">When this method returns, contains an object of type 
            <see cref="T:Arex388.Carmine.UserStatus" /> whose
            value is represented by <paramref name="value"/> if the parse operation succeeds.
            If the parse operation fails, contains the default value of the underlying type
            of <see cref="T:Arex388.Carmine.UserStatus" />. This parameter is passed uninitialized.</param>
            <param name="ignoreCase"><c>true</c> to read value in case insensitive mode; <c>false</c> to read value in case sensitive mode.</param>
            <param name="allowMatchingMetadataAttribute">If <c>true</c>, considers the value included in metadata attributes such as
            <c>[Display]</c> attribute when parsing, otherwise only considers the member names.</param>
            <returns><c>true</c> if the value parameter was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.UserStatusExtensions.GetValues">
            <summary>
            Retrieves an array of the values of the members defined in
            <see cref="T:Arex388.Carmine.UserStatus" />.
            Note that this returns a new array with every invocation, so
            should be cached if appropriate.
            </summary>
            <returns>An array of the values defined in <see cref="T:Arex388.Carmine.UserStatus" /></returns>
        </member>
        <member name="M:Arex388.Carmine.UserStatusExtensions.GetNames">
            <summary>
            Retrieves an array of the names of the members defined in
            <see cref="T:Arex388.Carmine.UserStatus" />.
            Note that this returns a new array with every invocation, so
            should be cached if appropriate.
            </summary>
            <returns>An array of the names of the members defined in <see cref="T:Arex388.Carmine.UserStatus" /></returns>
        </member>
        <member name="T:Arex388.Carmine.VehicleStatusExtensions">
            <summary>
            Extension methods for <see cref="T:Arex388.Carmine.VehicleStatus" />
            </summary>
        </member>
        <member name="F:Arex388.Carmine.VehicleStatusExtensions.Length">
            <summary>
            The number of members in the enum.
            This is a non-distinct count of defined names.
            </summary>
        </member>
        <member name="M:Arex388.Carmine.VehicleStatusExtensions.ToStringFast(Arex388.Carmine.VehicleStatus)">
            <summary>
            Returns the string representation of the <see cref="T:Arex388.Carmine.VehicleStatus"/> value.
            If the attribute is decorated with a <c>[Display]</c> attribute, then
            uses the provided value. Otherwise uses the name of the member, equivalent to
            calling <c>ToString()</c> on <paramref name="value"/>.
            </summary>
            <param name="value">The value to retrieve the string value for</param>
            <returns>The string representation of the value</returns>
        </member>
        <member name="M:Arex388.Carmine.VehicleStatusExtensions.IsDefined(Arex388.Carmine.VehicleStatus)">
            <summary>
            Returns a boolean telling whether the given enum value exists in the enumeration.
            </summary>
            <param name="value">The value to check if it's defined</param>
            <returns><c>true</c> if the value exists in the enumeration, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Arex388.Carmine.VehicleStatusExtensions.IsDefined(System.String)">
            <summary>
            Returns a boolean telling whether an enum with the given name exists in the enumeration.
            </summary>
            <param name="name">The name to check if it's defined</param>
            <returns><c>true</c> if a member with the name exists in the enumeration, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Arex388.Carmine.VehicleStatusExtensions.IsDefined(System.String,System.Boolean)">
            <summary>
            Returns a boolean telling whether an enum with the given name exists in the enumeration,
            or if a member decorated with a <c>[Display]</c> attribute
            with the required name exists.
            </summary>
            <param name="name">The name to check if it's defined</param>
            <param name="allowMatchingMetadataAttribute">If <c>true</c>, considers the value of metadata attributes,otherwise ignores them</param>
            <returns><c>true</c> if a member with the name exists in the enumeration, or a member is decorated
            with a <c>[Display]</c> attribute with the name, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Arex388.Carmine.VehicleStatusExtensions.TryParse(System.String,Arex388.Carmine.VehicleStatus@)">
            <summary>
            Converts the string representation of the name or numeric value of
            an <see cref="T:Arex388.Carmine.VehicleStatus" /> to the equivalent instance.
            The return value indicates whether the conversion succeeded.
            </summary>
            <param name="name">The case-sensitive string representation of the enumeration name or underlying value to convert</param>
            <param name="value">When this method returns, contains an object of type 
            <see cref="T:Arex388.Carmine.VehicleStatus" /> whose
            value is represented by <paramref name="value"/> if the parse operation succeeds.
            If the parse operation fails, contains the default value of the underlying type
            of <see cref="T:Arex388.Carmine.VehicleStatus" />. This parameter is passed uninitialized.</param>
            <returns><c>true</c> if the value parameter was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.VehicleStatusExtensions.TryParse(System.String,Arex388.Carmine.VehicleStatus@,System.Boolean)">
            <summary>
            Converts the string representation of the name or numeric value of
            an <see cref="T:Arex388.Carmine.VehicleStatus" /> to the equivalent instance.
            The return value indicates whether the conversion succeeded.
            </summary>
            <param name="name">The string representation of the enumeration name or underlying value to convert</param>
            <param name="value">When this method returns, contains an object of type 
            <see cref="T:Arex388.Carmine.VehicleStatus" /> whose
            value is represented by <paramref name="value"/> if the parse operation succeeds.
            If the parse operation fails, contains the default value of the underlying type
            of <see cref="T:Arex388.Carmine.VehicleStatus" />. This parameter is passed uninitialized.</param>
            <param name="ignoreCase"><c>true</c> to read value in case insensitive mode; <c>false</c> to read value in case sensitive mode.</param>
            <returns><c>true</c> if the value parameter was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.VehicleStatusExtensions.TryParse(System.String,Arex388.Carmine.VehicleStatus@,System.Boolean,System.Boolean)">
            <summary>
            Converts the string representation of the name or numeric value of
            an <see cref="T:Arex388.Carmine.VehicleStatus" /> to the equivalent instance.
            The return value indicates whether the conversion succeeded.
            </summary>
            <param name="name">The string representation of the enumeration name or underlying value to convert</param>
            <param name="value">When this method returns, contains an object of type 
            <see cref="T:Arex388.Carmine.VehicleStatus" /> whose
            value is represented by <paramref name="value"/> if the parse operation succeeds.
            If the parse operation fails, contains the default value of the underlying type
            of <see cref="T:Arex388.Carmine.VehicleStatus" />. This parameter is passed uninitialized.</param>
            <param name="ignoreCase"><c>true</c> to read value in case insensitive mode; <c>false</c> to read value in case sensitive mode.</param>
            <param name="allowMatchingMetadataAttribute">If <c>true</c>, considers the value included in metadata attributes such as
            <c>[Display]</c> attribute when parsing, otherwise only considers the member names.</param>
            <returns><c>true</c> if the value parameter was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Arex388.Carmine.VehicleStatusExtensions.GetValues">
            <summary>
            Retrieves an array of the values of the members defined in
            <see cref="T:Arex388.Carmine.VehicleStatus" />.
            Note that this returns a new array with every invocation, so
            should be cached if appropriate.
            </summary>
            <returns>An array of the values defined in <see cref="T:Arex388.Carmine.VehicleStatus" /></returns>
        </member>
        <member name="M:Arex388.Carmine.VehicleStatusExtensions.GetNames">
            <summary>
            Retrieves an array of the names of the members defined in
            <see cref="T:Arex388.Carmine.VehicleStatus" />.
            Note that this returns a new array with every invocation, so
            should be cached if appropriate.
            </summary>
            <returns>An array of the names of the members defined in <see cref="T:Arex388.Carmine.VehicleStatus" /></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>
            <c>IServiceCollection</c> extensions.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCarmine(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add Carmine.io service for interacting with multiple accounts.
            </summary>
            <param name="services">The service collection.</param>
            <returns>The service collection.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCarmine(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
            <summary>
            Add Carmine.io service for interacting with a single account.
            </summary>
            <param name="services">The service collection.</param>
            <param name="apiKey">The Carmine.io API key.</param>
            <returns>The service collection.</returns>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute">
            <summary>
            Specifies that null is allowed as an input even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute">
            <summary>
            Specifies that null is disallowed as an input even if the corresponding type allows it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute">
            <summary>
            Applied to a method that will never return under any circumstance.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">
            <summary>
            Specifies that the method will not return if the associated Boolean parameter is passed the specified value.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes the attribute with the specified parameter value.
            </summary>
            <param name="parameterValue">
            The condition parameter value. Code after the method will be considered unreachable
            by diagnostics if the argument to the associated parameter matches this value.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue">
            <summary>
            Gets the condition parameter value.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute">
            <summary>
            Specifies that an output may be null even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute">
            <summary>
            Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue"/>, the parameter may be null even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes the attribute with the specified return value condition.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter may be null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue">
            <summary>
            Gets the return value condition.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute">
            <summary>
            Specifies that the method or property will ensure that the listed field and property members have not-null values.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String)">
            <summary>
            Initializes the attribute with a field or property member.
            </summary>
            <param name="member">The field or property member that is promised to be not-null.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String[])">
            <summary>
            Initializes the attribute with the list of field and property members.
            </summary>
            <param name="members">The list of field and property members that are promised to be not-null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members">
            <summary>
            Gets field or property member names.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute">
            <summary>
            Specifies that the method or property will ensure that the listed field and property
            members have not-null values when returning with the specified return value condition.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String)">
            <summary>
            Initializes the attribute with the specified return value condition and a field or property member.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
            <param name="member">The field or property member that is promised to be not-null.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String[])">
            <summary>
            Initializes the attribute with the specified return value condition and list of field and property members.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
            <param name="members">The list of field and property members that are promised to be not-null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue">
            <summary>
            Gets the return value condition.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members">
            <summary>
            Gets field or property member names.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullAttribute">
            <summary>
            Specifies that an output will not be null even if the corresponding type allows it.
            Specifies that an input argument was not null when the call returns.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute">
            <summary>
            Specifies that the output will be non-null if the named parameter is non-null.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)">
            <summary>
            Initializes the attribute with the associated parameter name.
            </summary>
            <param name="parameterName">The associated parameter name. The output will be non-null if the argument to the parameter specified is non-null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName">
            <summary>
            Gets the associated parameter name.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute">
            <summary>
            Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue"/>, the parameter will not be null even if the corresponding type allows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes the attribute with the specified return value condition.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute">
            <summary>
            Specifies that this constructor sets all required members for the current type,
            and callers do not need to set any required members themselves.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute">
            <summary>
            Specifies the syntax used in a string.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.#ctor(System.String)">
            <summary>
            Initializes the <see cref="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute"/> with the identifier of the syntax used.
            </summary>
            <param name="syntax">The syntax identifier.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.#ctor(System.String,System.Object[])">
            <summary>Initializes the <see cref="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute"/> with the identifier of the syntax used.</summary>
            <param name="syntax">The syntax identifier.</param>
            <param name="arguments">Optional arguments associated with the specific syntax employed.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Syntax">
            <summary>Gets the identifier of the syntax used.</summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Arguments">
            <summary>Optional arguments associated with the specific syntax employed.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.CompositeFormat">
            <summary>The syntax identifier for strings containing composite formats for string formatting.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.DateOnlyFormat">
            <summary>The syntax identifier for strings containing date format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.DateTimeFormat">
            <summary>The syntax identifier for strings containing date and time format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.EnumFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.Enum"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.GuidFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.Guid"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Json">
            <summary>The syntax identifier for strings containing JavaScript Object Notation (JSON).</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.NumericFormat">
            <summary>The syntax identifier for strings containing numeric format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Regex">
            <summary>The syntax identifier for strings containing regular expressions.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.TimeOnlyFormat">
            <summary>The syntax identifier for strings containing time format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.TimeSpanFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.TimeSpan"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Uri">
            <summary>The syntax identifier for strings containing URIs.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Xml">
            <summary>The syntax identifier for strings containing XML.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.UnscopedRefAttribute">
            <summary>
            Used to indicate a byref escapes and is not scoped.
            </summary>
            <remarks>
            <para>
            There are several cases where the C# compiler treats a <see langword="ref"/> as implicitly
            <see langword="scoped"/> - where the compiler does not allow the <see langword="ref"/> to escape the method.
            </para>
            <para>
            For example:
            <list type="number">
                <item><see langword="this"/> for <see langword="struct"/> instance methods.</item>
                <item><see langword="ref"/> parameters that refer to <see langword="ref"/> <see langword="struct"/> types.</item>
                <item><see langword="out"/> parameters.</item>
            </list>
            </para>
            <para>
            This attribute is used in those instances where the <see langword="ref"/> should be allowed to escape.
            </para>
            <para>
            Applying this attribute, in any form, has impact on consumers of the applicable API. It is necessary for
            API authors to understand the lifetime implications of applying this attribute and how it may impact their users.
            </para>
            </remarks>
        </member>
        <member name="T:System.Index">
            <summary>Represent a type can be used to index a collection either from the start or the end.</summary>
            <remarks>
            Index is used by the C# compiler to support the new index syntax
            <code>
            int[] someArray = new int[5] { 1, 2, 3, 4, 5 } ;
            int lastElement = someArray[^1]; // lastElement = 5
            </code>
            </remarks>
        </member>
        <member name="M:System.Index.#ctor(System.Int32,System.Boolean)">
            <summary>Construct an Index using a value and indicating if the index is from the start or from the end.</summary>
            <param name="value">The index value. it has to be zero or positive number.</param>
            <param name="fromEnd">Indicating if the index is from the start or from the end.</param>
            <remarks>
            If the Index constructed from the end, index value 1 means pointing at the last element and index value 0 means pointing at beyond last element.
            </remarks>
        </member>
        <member name="P:System.Index.Start">
            <summary>Create an Index pointing at first element.</summary>
        </member>
        <member name="P:System.Index.End">
            <summary>Create an Index pointing at beyond last element.</summary>
        </member>
        <member name="M:System.Index.FromStart(System.Int32)">
            <summary>Create an Index from the start at the position indicated by the value.</summary>
            <param name="value">The index value from the start.</param>
        </member>
        <member name="M:System.Index.FromEnd(System.Int32)">
            <summary>Create an Index from the end at the position indicated by the value.</summary>
            <param name="value">The index value from the end.</param>
        </member>
        <member name="P:System.Index.Value">
            <summary>Returns the index value.</summary>
        </member>
        <member name="P:System.Index.IsFromEnd">
            <summary>Indicates whether the index is from the start or the end.</summary>
        </member>
        <member name="M:System.Index.GetOffset(System.Int32)">
            <summary>Calculate the offset from the start using the giving collection length.</summary>
            <param name="length">The length of the collection that the Index will be used with. length has to be a positive value</param>
            <remarks>
            For performance reason, we don't validate the input length parameter and the returned offset value against negative values.
            we don't validate either the returned offset is greater than the input length.
            It is expected Index will be used with collections which always have non negative length/count. If the returned offset is negative and
            then used to index a collection will get out of range exception which will be same affect as the validation.
            </remarks>
        </member>
        <member name="M:System.Index.Equals(System.Object)">
            <summary>Indicates whether the current Index object is equal to another object of the same type.</summary>
            <param name="value">An object to compare with this object</param>
        </member>
        <member name="M:System.Index.Equals(System.Index)">
            <summary>Indicates whether the current Index object is equal to another Index object.</summary>
            <param name="other">An object to compare with this object</param>
        </member>
        <member name="M:System.Index.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
        </member>
        <member name="M:System.Index.op_Implicit(System.Int32)~System.Index">
            <summary>Converts integer number to an Index.</summary>
        </member>
        <member name="M:System.Index.ToString">
            <summary>Converts the value of the current Index object to its equivalent string representation.</summary>
        </member>
        <member name="T:System.Range">
            <summary>Represent a range has start and end indexes.</summary>
            <remarks>
            Range is used by the C# compiler to support the range syntax.
            <code>
            int[] someArray = new int[5] { 1, 2, 3, 4, 5 };
            int[] subArray1 = someArray[0..2]; // { 1, 2 }
            int[] subArray2 = someArray[1..^0]; // { 2, 3, 4, 5 }
            </code>
            </remarks>
        </member>
        <member name="P:System.Range.Start">
            <summary>Represent the inclusive start index of the Range.</summary>
        </member>
        <member name="P:System.Range.End">
            <summary>Represent the exclusive end index of the Range.</summary>
        </member>
        <member name="M:System.Range.#ctor(System.Index,System.Index)">
            <summary>Construct a Range object using the start and end indexes.</summary>
            <param name="start">Represent the inclusive start index of the range.</param>
            <param name="end">Represent the exclusive end index of the range.</param>
        </member>
        <member name="M:System.Range.Equals(System.Object)">
            <summary>Indicates whether the current Range object is equal to another object of the same type.</summary>
            <param name="value">An object to compare with this object</param>
        </member>
        <member name="M:System.Range.Equals(System.Range)">
            <summary>Indicates whether the current Range object is equal to another Range object.</summary>
            <param name="other">An object to compare with this object</param>
        </member>
        <member name="M:System.Range.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
        </member>
        <member name="M:System.Range.ToString">
            <summary>Converts the value of the current Range object to its equivalent string representation.</summary>
        </member>
        <member name="M:System.Range.StartAt(System.Index)">
            <summary>Create a Range object starting from start index to the end of the collection.</summary>
        </member>
        <member name="M:System.Range.EndAt(System.Index)">
            <summary>Create a Range object starting from first element in the collection to the end Index.</summary>
        </member>
        <member name="P:System.Range.All">
            <summary>Create a Range object starting from first element to the end.</summary>
        </member>
        <member name="M:System.Range.GetOffsetAndLength(System.Int32)">
            <summary>Calculate the start offset and length of range object using a collection length.</summary>
            <param name="length">The length of the collection that the range will be used with. length has to be a positive value.</param>
            <remarks>
            For performance reason, we don't validate the input length parameter against negative values.
            It is expected Range will be used with collections which always have non negative length/count.
            We validate the range is inside the length scope though.
            </remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute">
            <summary>
            An attribute that allows parameters to receive the expression of other parameters.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute"/> class.
            </summary>
            <param name="parameterName">The condition parameter value.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute.ParameterName">
            <summary>
            Gets the parameter name the expression is retrieved from.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute">
            <summary>
            Indicates that compiler support for a particular feature is required for the location where this attribute is applied.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute"/> type.
            </summary>
            <param name="featureName">The name of the feature to indicate.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName">
            <summary>
            The name of the compiler feature.
            </summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.IsOptional">
            <summary>
            If true, the compiler can choose to allow access to the location where this attribute is applied if it does not understand <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/>.
            </summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.RefStructs">
            <summary>
            The <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/> used for the ref structs C# feature.
            </summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.RequiredMembers">
            <summary>
            The <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/> used for the required members C# feature.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute">
            <summary>
            Indicates which arguments to a method involving an interpolated string handler should be passed to that handler.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute"/> class.
            </summary>
            <param name="argument">The name of the argument that should be passed to the handler.</param>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="M:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute"/> class.
            </summary>
            <param name="arguments">The names of the arguments that should be passed to the handler.</param>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="P:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.Arguments">
            <summary>
            Gets the names of the arguments that should be passed to the handler.
            </summary>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute">
            <summary>
            Indicates the attributed type is to be used as an interpolated string handler.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.IsExternalInit">
            <summary>
            Reserved to be used by the compiler for tracking metadata.
            This class should not be used by developers in source code.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.ModuleInitializerAttribute">
             <summary>
             Used to indicate to the compiler that a method should be called
             in its containing module's initializer.
             </summary>
             <remarks>
             When one or more valid methods
             with this attribute are found in a compilation, the compiler will
             emit a module initializer which calls each of the attributed methods.
            
             Certain requirements are imposed on any method targeted with this attribute:
             - The method must be `static`.
             - The method must be an ordinary member method, as opposed to a property accessor, constructor, local function, etc.
             - The method must be parameterless.
             - The method must return `void`.
             - The method must not be generic or be contained in a generic type.
             - The method's effective accessibility must be `internal` or `public`.
            
             The specification for module initializers in the .NET runtime can be found here:
             https://github.com/dotnet/runtime/blob/main/docs/design/specs/Ecma-335-Augments.md#module-initializer
             </remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.RequiredMemberAttribute">
            <summary>
            Specifies that a type has required members or that a member is required.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.SkipLocalsInitAttribute">
            <summary>
            Used to indicate to the compiler that the <c>.locals init</c> flag should not be set in method headers.
            </summary>
        </member>
        <member name="M:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute"/> class.
            </summary>
        </member>
        <member name="M:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute"/> class with the specified message.
            </summary>
            <param name="message">An optional message associated with this attribute instance.</param>
        </member>
        <member name="P:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.Message">
            <summary>
            Returns the optional message associated with this attribute instance.
            </summary>
        </member>
        <member name="P:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.Url">
            <summary>
            Returns the optional URL associated with this attribute instance.
            </summary>
        </member>
    </members>
</doc>
